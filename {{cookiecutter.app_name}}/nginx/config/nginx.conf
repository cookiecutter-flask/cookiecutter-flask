daemon off;
user nginx;
worker_processes  auto;

# The Nginx process id saved to a file.
pid        /var/run/nginx.pid;

error_log stderr info;

events {
    worker_connections  1024;
    multi_accept on;
}

http {
    port_in_redirect off;
    access_log off;
    error_log /data/logs/nginx/error.log error;

    include /config/nginx_mime.types;
    default_type application/octet-stream;
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection on;
    client_max_body_size 10M;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;

    gzip on;
    gzip_comp_level 2;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_min_length 126;
    gzip_buffers 16 8k;
    gzip_types *;

    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:30m max_size=1G;
    upstream flaskapp {
        # app = docker container service name
        server app:${APP_PORT};
    }

    server {
        listen  ${APP_PORT};
        server_name  127.0.0.1;

        #### Docker Internal DNS Resolver ####
        # Docker internal dns resolver, used for scaling app containers. Default: 5 Minutes.
        resolver 127.0.0.11 valid=5m;

        # Assigning upstream to a variable allows nginx to automatically reload when there's a
        # new container via the internal dns resolver. Used for scaling app containers.
        set $upstream http://flaskapp;

        location /static {
            proxy_cache cache;
            proxy_cache_valid 30m;
            proxy_pass  $upstream;
        }

        location /media/ {
            alias /data/media/;
        }

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 300;

            proxy_pass $upstream;
        }

    }
}
